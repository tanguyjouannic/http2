use crate::error::Http2Error;

pub enum Node {
    Branch(Option<Box<Node>>, Option<Box<Node>>),
    Leaf(u16),
}

impl Node {
    pub fn update(&mut self, mut path: Path, symbol: u16) -> Result<(), Http2Error> {
        println!("symbol: {}", symbol);


        // Exit condition.
        if path.directions.len() == 0 {
            match self {
                Node::Branch(_, _) => {
                    *self = Node::Leaf(symbol);
                    return Ok(())
                }
                Node::Leaf(_) => {
                    return Err(Http2Error::HuffmanDecodingError(
                        "Huffman Tree building error 3".to_string(),
                    ))
                }
            }
        }

        let direction = path.directions.remove(0);

        match direction {
            Direction::Left => {
                let node = match self {
                    Node::Branch(left, _) => {
                        left.get_or_insert(Box::new(Node::Branch(None, None)))
                    }
                    Node::Leaf(_) => {
                        return Err(Http2Error::HuffmanDecodingError(
                            "Huffman Tree building error 1".to_string(),
                        ))
                    } // Unexpected leaf
                };
                return node.update(path, symbol);
            }
            Direction::Right => {
                let node = match self {
                    Node::Branch(_, right) => {
                        right.get_or_insert(Box::new(Node::Branch(None, None)))
                    }
                    Node::Leaf(s) => {
                        println!("symbol: {}", s);
                        return Err(Http2Error::HuffmanDecodingError(
                            "Huffman Tree building error 2".to_string(),
                        ))
                    } // Unexpected leaf
                };
                return node.update(path, symbol);
            }
        }
    }
}

#[derive(Debug)]
pub enum Direction {
    Left,
    Right,
}

pub struct Path {
    pub directions: Vec<Direction>,
}

impl Path {
    pub fn from(code: u32) -> Self {
        let mut directions = Vec::new();
        let mut i = 0;

        // While we find padding 0's, skip them.
        while (code >> (31 - i)) & 1 == 0 {
            i += 1;
        }

        // For each bit in the code, push the corresponding direction.
        for j in i..32 {
            let bit = (code >> (31 - j)) & 1;

            if bit == 0 {
                directions.push(Direction::Left);
            } else {
                directions.push(Direction::Right);
            }
        }

        if directions.len() == 0 {
            directions.push(Direction::Left);
        }

        Path { directions }
    }
}

pub struct Tree {
    root: Node,
}

impl Tree {
    pub fn new() -> Result<Self, Http2Error> {
        let mut root = Node::Branch(None, None);

        for &(symbol, code) in HPACK_HUFFMAN_CODE.iter() {
            let path = Path::from(code);
            root.update(path, symbol)?;
        }

        Ok(Tree { root })
    }
}

/// HPACK Huffman code table.
pub const HPACK_HUFFMAN_CODE: [(u16, u32); 257] = [
    // (  0)  |11111111|11000                             1ff8  [13]
    (0, 0x1ff8),
    // (  1)  |11111111|11111111|1011000                7fffd8  [23]
    (1, 0x7fffd8),
    // (  2)  |11111111|11111111|11111110|0010         fffffe2  [28]
    (2, 0xfffffe2),
    // (  3)  |11111111|11111111|11111110|0011         fffffe3  [28]
    (3, 0xfffffe3),
    // (  4)  |11111111|11111111|11111110|0100         fffffe4  [28]
    (4, 0xfffffe4),
    // (  5)  |11111111|11111111|11111110|0101         fffffe5  [28]
    (5, 0xfffffe5),
    // (  6)  |11111111|11111111|11111110|0110         fffffe6  [28]
    (6, 0xfffffe6),
    // (  7)  |11111111|11111111|11111110|0111         fffffe7  [28]
    (7, 0xfffffe7),
    // (  8)  |11111111|11111111|11111110|1000         fffffe8  [28]
    (8, 0xfffffe8),
    // (  9)  |11111111|11111111|11101010               ffffea  [24]
    (9, 0xffffea),
    // ( 10)  |11111111|11111111|11111111|111100      3ffffffc  [30]
    (10, 0x3ffffffc),
    // ( 11)  |11111111|11111111|11111110|1001         fffffe9  [28]
    (11, 0xfffffe9),
    // ( 12)  |11111111|11111111|11111110|1010         fffffea  [28]
    (12, 0xfffffea),
    // ( 13)  |11111111|11111111|11111111|111101      3ffffffd  [30]
    (13, 0x3ffffffd),
    // ( 14)  |11111111|11111111|11111110|1011         fffffeb  [28]
    (14, 0xfffffeb),
    // ( 15)  |11111111|11111111|11111110|1100         fffffec  [28]
    (15, 0xfffffec),
    // ( 16)  |11111111|11111111|11111110|1101         fffffed  [28]
    (16, 0xfffffed),
    // ( 17)  |11111111|11111111|11111110|1110         fffffee  [28]
    (17, 0xfffffee),
    // ( 18)  |11111111|11111111|11111110|1111         fffffef  [28]
    (18, 0xfffffef),
    // ( 19)  |11111111|11111111|11111111|0000         ffffff0  [28]
    (19, 0xffffff0),
    // ( 20)  |11111111|11111111|11111111|0001         ffffff1  [28]
    (20, 0xffffff1),
    // ( 21)  |11111111|11111111|11111111|0010         ffffff2  [28]
    (21, 0xffffff2),
    // ( 22)  |11111111|11111111|11111111|111110      3ffffffe  [30]
    (22, 0x3ffffffe),
    // ( 23)  |11111111|11111111|11111111|0011         ffffff3  [28]
    (23, 0xffffff3),
    // ( 24)  |11111111|11111111|11111111|0100         ffffff4  [28]
    (24, 0xffffff4),
    // ( 25)  |11111111|11111111|11111111|0101         ffffff5  [28]
    (25, 0xffffff5),
    // ( 26)  |11111111|11111111|11111111|0110         ffffff6  [28]
    (26, 0xffffff6),
    // ( 27)  |11111111|11111111|11111111|0111         ffffff7  [28]
    (27, 0xffffff7),
    // ( 28)  |11111111|11111111|11111111|1000         ffffff8  [28]
    (28, 0xffffff8),
    // ( 29)  |11111111|11111111|11111111|1001         ffffff9  [28]
    (29, 0xffffff9),
    // ( 30)  |11111111|11111111|11111111|1010         ffffffa  [28]
    (30, 0xffffffa),
    // ( 31)  |11111111|11111111|11111111|1011         ffffffb  [28]
    (31, 0xffffffb),
    // ( 32)  |010100                                       14  [ 6]
    (32, 0x14),
    // ( 33)  |11111110|00                                 3f8  [10]
    (33, 0x3f8),
    // ( 34)  |11111110|01                                 3f9  [10]
    (34, 0x3f9),
    // ( 35)  |11111111|1010                               ffa  [12]
    (35, 0xffa),
    // ( 36)  |11111111|11001                             1ff9  [13]
    (36, 0x1ff9),
    // ( 37)  |010101                                       15  [ 6]
    (37, 0x15),
    // ( 38)  |11111000                                     f8  [ 8]
    (38, 0xf8),
    // ( 39)  |11111111|010                                7fa  [11]
    (39, 0x7fa),
    // ( 40)  |11111110|10                                 3fa  [10]
    (40, 0x3fa),
    // ( 41)  |11111110|11                                 3fb  [10]
    (41, 0x3fb),
    // ( 42)  |11111001                                     f9  [ 8]
    (42, 0xf9),
    // ( 43)  |11111111|011                                7fb  [11]
    (43, 0x7fb),
    // ( 44)  |11111010                                     fa  [ 8]
    (44, 0xfa),
    // ( 45)  |010110                                       16  [ 6]
    (45, 0x16),
    // ( 46)  |010111                                       17  [ 6]
    (46, 0x17),
    // ( 47)  |011000                                       18  [ 6]
    (47, 0x18),
    // ( 48)  |00000                                         0  [ 5]
    (48, 0x0),
    // ( 49)  |00001                                         1  [ 5]
    (49, 0x1),
    // ( 50)  |00010                                         2  [ 5]
    (50, 0x2),
    // ( 51)  |011001                                       19  [ 6]
    (51, 0x19),
    // ( 52)  |011010                                       1a  [ 6]
    (52, 0x1a),
    // ( 53)  |011011                                       1b  [ 6]
    (53, 0x1b),
    // ( 54)  |011100                                       1c  [ 6]
    (54, 0x1c),
    // ( 55)  |011101                                       1d  [ 6]
    (55, 0x1d),
    // ( 56)  |011110                                       1e  [ 6]
    (56, 0x1e),
    // ( 57)  |011111                                       1f  [ 6]
    (57, 0x1f),
    // ( 58)  |1011100                                      5c  [ 7]
    (58, 0x5c),
    // ( 59)  |11111011                                     fb  [ 8]
    (59, 0xfb),
    // ( 60)  |11111111|1111100                           7ffc  [15]
    (60, 0x7ffc),
    // ( 61)  |100000                                       20  [ 6]
    (61, 0x20),
    // ( 62)  |11111111|1011                               ffb  [12]
    (62, 0xffb),
    // ( 63)  |11111111|00                                 3fc  [10]
    (63, 0x3fc),
    // ( 64)  |11111111|11010                             1ffa  [13]
    (64, 0x1ffa),
    // ( 65)  |100001                                       21  [ 6]
    (65, 0x21),
    // ( 66)  |1011101                                      5d  [ 7]
    (66, 0x5d),
    // ( 67)  |1011110                                      5e  [ 7]
    (67, 0x5e),
    // ( 68)  |1011111                                      5f  [ 7]
    (68, 0x5f),
    // ( 69)  |1100000                                      60  [ 7]
    (69, 0x60),
    // ( 70)  |1100001                                      61  [ 7]
    (70, 0x61),
    // ( 71)  |1100010                                      62  [ 7]
    (71, 0x62),
    // ( 72)  |1100011                                      63  [ 7]
    (72, 0x63),
    // ( 73)  |1100100                                      64  [ 7]
    (73, 0x64),
    // ( 74)  |1100101                                      65  [ 7]
    (74, 0x65),
    // ( 75)  |1100110                                      66  [ 7]
    (75, 0x66),
    // ( 76)  |1100111                                      67  [ 7]
    (76, 0x67),
    // ( 77)  |1101000                                      68  [ 7]
    (77, 0x68),
    // ( 78)  |1101001                                      69  [ 7]
    (78, 0x69),
    // ( 79)  |1101010                                      6a  [ 7]
    (79, 0x6a),
    // ( 80)  |1101011                                      6b  [ 7]
    (80, 0x6b),
    // ( 81)  |1101100                                      6c  [ 7]
    (81, 0x6c),
    // ( 82)  |1101101                                      6d  [ 7]
    (82, 0x6d),
    // ( 83)  |1101110                                      6e  [ 7]
    (83, 0x6e),
    // ( 84)  |1101111                                      6f  [ 7]
    (84, 0x6f),
    // ( 85)  |1110000                                      70  [ 7]
    (85, 0x70),
    // ( 86)  |1110001                                      71  [ 7]
    (86, 0x71),
    // ( 87)  |1110010                                      72  [ 7]
    (87, 0x72),
    // ( 88)  |11111100                                     fc  [ 8]
    (88, 0xfc),
    // ( 89)  |1110011                                      73  [ 7]
    (89, 0x73),
    // ( 90)  |11111101                                     fd  [ 8]
    (90, 0xfd),
    // ( 91)  |11111111|11011                             1ffb  [13]
    (91, 0x1ffb),
    // ( 92)  |11111111|11111110|000                     7fff0  [19]
    (92, 0x7fff0),
    // ( 93)  |11111111|11100                             1ffc  [13]
    (93, 0x1ffc),
    // ( 94)  |11111111|111100                            3ffc  [14]
    (94, 0x3ffc),
    // ( 95)  |100010                                       22  [ 6]
    (95, 0x22),
    // ( 96)  |11111111|1111101                           7ffd  [15]
    (96, 0x7ffd),
    // ( 97)  |00011                                         3  [ 5]
    (97, 0x3),
    // ( 98)  |100011                                       23  [ 6]
    (98, 0x23),
    // ( 99)  |00100                                         4  [ 5]
    (99, 0x4),
    // (100)  |100100                                       24  [ 6]
    (100, 0x24),
    // (101)  |00101                                         5  [ 5]
    (101, 0x5),
    // (102)  |100101                                       25  [ 6]
    (102, 0x25),
    // (103)  |100110                                       26  [ 6]
    (103, 0x26),
    // (104)  |100111                                       27  [ 6]
    (104, 0x27),
    // (105)  |00110                                         6  [ 5]
    (105, 0x6),
    // (106)  |1110100                                      74  [ 7]
    (106, 0x74),
    // (107)  |1110101                                      75  [ 7]
    (107, 0x75),
    // (108)  |101000                                       28  [ 6]
    (108, 0x28),
    // (109)  |101001                                       29  [ 6]
    (109, 0x29),
    // (110)  |101010                                       2a  [ 6]
    (110, 0x2a),
    // (111)  |00111                                         7  [ 5]
    (111, 0x7),
    // (112)  |101011                                       2b  [ 6]
    (112, 0x2b),
    // (113)  |1110110                                      76  [ 7]
    (113, 0x76),
    // (114)  |101100                                       2c  [ 6]
    (114, 0x2c),
    // (115)  |01000                                         8  [ 5]
    (115, 0x8),
    // (116)  |01001                                         9  [ 5]
    (116, 0x9),
    // (117)  |101101                                       2d  [ 6]
    (117, 0x2d),
    // (118)  |1110111                                      77  [ 7]
    (118, 0x77),
    // (119)  |1111000                                      78  [ 7]
    (119, 0x78),
    // (120)  |1111001                                      79  [ 7]
    (120, 0x79),
    // (121)  |1111010                                      7a  [ 7]
    (121, 0x7a),
    // (122)  |1111011                                      7b  [ 7]
    (122, 0x7b),
    // (123)  |11111111|1111110                           7ffe  [15]
    (123, 0x7ffe),
    // (124)  |11111111|100                                7fc  [11]
    (124, 0x7fc),
    // (125)  |11111111|111101                            3ffd  [14]
    (125, 0x3ffd),
    // (126)  |11111111|11101                             1ffd  [13]
    (126, 0x1ffd),
    // (127)  |11111111|11111111|11111111|1100         ffffffc  [28]
    (127, 0xffffffc),
    // (128)  |11111111|11111110|0110                    fffe6  [20]
    (128, 0xfffe6),
    // (129)  |11111111|11111111|010010                 3fffd2  [22]
    (129, 0x3fffd2),
    // (130)  |11111111|11111110|0111                    fffe7  [20]
    (130, 0xfffe7),
    // (131)  |11111111|11111110|1000                    fffe8  [20]
    (131, 0xfffe8),
    // (132)  |11111111|11111111|010011                 3fffd3  [22]
    (132, 0x3fffd3),
    // (133)  |11111111|11111111|010100                 3fffd4  [22]
    (133, 0x3fffd4),
    // (134)  |11111111|11111111|010101                 3fffd5  [22]
    (134, 0x3fffd5),
    // (135)  |11111111|11111111|1011001                7fffd9  [23]
    (135, 0x7fffd9),
    // (136)  |11111111|11111111|010110                 3fffd6  [22]
    (136, 0x3fffd6),
    // (137)  |11111111|11111111|1011010                7fffda  [23]
    (137, 0x7fffda),
    // (138)  |11111111|11111111|1011011                7fffdb  [23]
    (138, 0x7fffdb),
    // (139)  |11111111|11111111|1011100                7fffdc  [23]
    (139, 0x7fffdc),
    // (140)  |11111111|11111111|1011101                7fffdd  [23]
    (140, 0x7fffdd),
    // (141)  |11111111|11111111|1011110                7fffde  [23]
    (141, 0x7fffde),
    // (142)  |11111111|11111111|11101011               ffffeb  [24]
    (142, 0xffffeb),
    // (143)  |11111111|11111111|1011111                7fffdf  [23]
    (143, 0x7fffdf),
    // (144)  |11111111|11111111|11101100               ffffec  [24]
    (144, 0xffffec),
    // (145)  |11111111|11111111|11101101               ffffed  [24]
    (145, 0xffffed),
    // (146)  |11111111|11111111|010111                 3fffd7  [22]
    (146, 0x3fffd7),
    // (147)  |11111111|11111111|1100000                7fffe0  [23]
    (147, 0x7fffe0),
    // (148)  |11111111|11111111|11101110               ffffee  [24]
    (148, 0xffffee),
    // (149)  |11111111|11111111|1100001                7fffe1  [23]
    (149, 0x7fffe1),
    // (150)  |11111111|11111111|1100010                7fffe2  [23]
    (150, 0x7fffe2),
    // (151)  |11111111|11111111|1100011                7fffe3  [23]
    (151, 0x7fffe3),
    // (152)  |11111111|11111111|1100100                7fffe4  [23]
    (152, 0x7fffe4),
    // (153)  |11111111|11111110|11100                  1fffdc  [21]
    (153, 0x1fffdc),
    // (154)  |11111111|11111111|011000                 3fffd8  [22]
    (154, 0x3fffd8),
    // (155)  |11111111|11111111|1100101                7fffe5  [23]
    (155, 0x7fffe5),
    // (156)  |11111111|11111111|011001                 3fffd9  [22]
    (156, 0x3fffd9),
    // (157)  |11111111|11111111|1100110                7fffe6  [23]
    (157, 0x7fffe6),
    // (158)  |11111111|11111111|1100111                7fffe7  [23]
    (158, 0x7fffe7),
    // (159)  |11111111|11111111|11101111               ffffef  [24]
    (159, 0xffffef),
    // (160)  |11111111|11111111|011010                 3fffda  [22]
    (160, 0x3fffda),
    // (161)  |11111111|11111110|11101                  1fffdd  [21]
    (161, 0x1fffdd),
    // (162)  |11111111|11111110|1001                    fffe9  [20]
    (162, 0xfffe9),
    // (163)  |11111111|11111111|011011                 3fffdb  [22]
    (163, 0x3fffdb),
    // (164)  |11111111|11111111|011100                 3fffdc  [22]
    (164, 0x3fffdc),
    // (165)  |11111111|11111111|1101000                7fffe8  [23]
    (165, 0x7fffe8),
    // (166)  |11111111|11111111|1101001                7fffe9  [23]
    (166, 0x7fffe9),
    // (167)  |11111111|11111110|11110                  1fffde  [21]
    (167, 0x1fffde),
    // (168)  |11111111|11111111|1101010                7fffea  [23]
    (168, 0x7fffea),
    // (169)  |11111111|11111111|011101                 3fffdd  [22]
    (169, 0x3fffdd),
    // (170)  |11111111|11111111|011110                 3fffde  [22]
    (170, 0x3fffde),
    // (171)  |11111111|11111111|11110000               fffff0  [24]
    (171, 0xfffff0),
    // (172)  |11111111|11111110|11111                  1fffdf  [21]
    (172, 0x1fffdf),
    // (173)  |11111111|11111111|011111                 3fffdf  [22]
    (173, 0x3fffdf),
    // (174)  |11111111|11111111|1101011                7fffeb  [23]
    (174, 0x7fffeb),
    // (175)  |11111111|11111111|1101100                7fffec  [23]
    (175, 0x7fffec),
    // (176)  |11111111|11111111|00000                  1fffe0  [21]
    (176, 0x1fffe0),
    // (177)  |11111111|11111111|00001                  1fffe1  [21]
    (177, 0x1fffe1),
    // (178)  |11111111|11111111|100000                 3fffe0  [22]
    (178, 0x3fffe0),
    // (179)  |11111111|11111111|00010                  1fffe2  [21]
    (179, 0x1fffe2),
    // (180)  |11111111|11111111|1101101                7fffed  [23]
    (180, 0x7fffed),
    // (181)  |11111111|11111111|100001                 3fffe1  [22]
    (181, 0x3fffe1),
    // (182)  |11111111|11111111|1101110                7fffee  [23]
    (182, 0x7fffee),
    // (183)  |11111111|11111111|1101111                7fffef  [23]
    (183, 0x7fffef),
    // (184)  |11111111|11111110|1010                    fffea  [20]
    (184, 0xfffea),
    // (185)  |11111111|11111111|100010                 3fffe2  [22]
    (185, 0x3fffe2),
    // (186)  |11111111|11111111|100011                 3fffe3  [22]
    (186, 0x3fffe3),
    // (187)  |11111111|11111111|100100                 3fffe4  [22]
    (187, 0x3fffe4),
    // (188)  |11111111|11111111|1110000                7ffff0  [23]
    (188, 0x7ffff0),
    // (189)  |11111111|11111111|100101                 3fffe5  [22]
    (189, 0x3fffe5),
    // (190)  |11111111|11111111|100110                 3fffe6  [22]
    (190, 0x3fffe6),
    // (191)  |11111111|11111111|1110001                7ffff1  [23]
    (191, 0x7ffff1),
    // (192)  |11111111|11111111|11111000|00           3ffffe0  [26]
    (192, 0x3ffffe0),
    // (193)  |11111111|11111111|11111000|01           3ffffe1  [26]
    (193, 0x3ffffe1),
    // (194)  |11111111|11111110|1011                    fffeb  [20]
    (194, 0xfffeb),
    // (195)  |11111111|11111110|001                     7fff1  [19]
    (195, 0x7fff1),
    // (196)  |11111111|11111111|100111                 3fffe7  [22]
    (196, 0x3fffe7),
    // (197)  |11111111|11111111|1110010                7ffff2  [23]
    (197, 0x7ffff2),
    // (198)  |11111111|11111111|101000                 3fffe8  [22]
    (198, 0x3fffe8),
    // (199)  |11111111|11111111|11110110|0            1ffffec  [25]
    (199, 0x1ffffec),
    // (200)  |11111111|11111111|11111000|10           3ffffe2  [26]
    (200, 0x3ffffe2),
    // (201)  |11111111|11111111|11111000|11           3ffffe3  [26]
    (201, 0x3ffffe3),
    // (202)  |11111111|11111111|11111001|00           3ffffe4  [26]
    (202, 0x3ffffe4),
    // (203)  |11111111|11111111|11111011|110          7ffffde  [27]
    (203, 0x7ffffde),
    // (204)  |11111111|11111111|11111011|111          7ffffdf  [27]
    (204, 0x7ffffdf),
    // (205)  |11111111|11111111|11111001|01           3ffffe5  [26]
    (205, 0x3ffffe5),
    // (206)  |11111111|11111111|11110001               fffff1  [24]
    (206, 0xfffff1),
    // (207)  |11111111|11111111|11110110|1            1ffffed  [25]
    (207, 0x1ffffed),
    // (208)  |11111111|11111110|010                     7fff2  [19]
    (208, 0x7fff2),
    // (209)  |11111111|11111111|00011                  1fffe3  [21]
    (209, 0x1fffe3),
    // (210)  |11111111|11111111|11111001|10           3ffffe6  [26]
    (210, 0x3ffffe6),
    // (211)  |11111111|11111111|11111100|000          7ffffe0  [27]
    (211, 0x7ffffe0),
    // (212)  |11111111|11111111|11111100|001          7ffffe1  [27]
    (212, 0x7ffffe1),
    // (213)  |11111111|11111111|11111001|11           3ffffe7  [26]
    (213, 0x3ffffe7),
    // (214)  |11111111|11111111|11111100|010          7ffffe2  [27]
    (214, 0x7ffffe2),
    // (215)  |11111111|11111111|11110010               fffff2  [24]
    (215, 0xfffff2),
    // (216)  |11111111|11111111|00100                  1fffe4  [21]
    (216, 0x1fffe4),
    // (217)  |11111111|11111111|00101                  1fffe5  [21]
    (217, 0x1fffe5),
    // (218)  |11111111|11111111|11111010|00           3ffffe8  [26]
    (218, 0x3ffffe8),
    // (219)  |11111111|11111111|11111010|01           3ffffe9  [26]
    (219, 0x3ffffe9),
    // (220)  |11111111|11111111|11111111|1101         ffffffd  [28]
    (220, 0xffffffd),
    // (221)  |11111111|11111111|11111100|011          7ffffe3  [27]
    (221, 0x7ffffe3),
    // (222)  |11111111|11111111|11111100|100          7ffffe4  [27]
    (222, 0x7ffffe4),
    // (223)  |11111111|11111111|11111100|101          7ffffe5  [27]
    (223, 0x7ffffe5),
    // (224)  |11111111|11111110|1100                    fffec  [20]
    (224, 0xfffec),
    // (225)  |11111111|11111111|11110011               fffff3  [24]
    (225, 0xfffff3),
    // (226)  |11111111|11111110|1101                    fffed  [20]
    (226, 0xfffed),
    // (227)  |11111111|11111111|00110                  1fffe6  [21]
    (227, 0x1fffe6),
    // (228)  |11111111|11111111|101001                 3fffe9  [22]
    (228, 0x3fffe9),
    // (229)  |11111111|11111111|00111                  1fffe7  [21]
    (229, 0x1fffe7),
    // (230)  |11111111|11111111|01000                  1fffe8  [21]
    (230, 0x1fffe8),
    // (231)  |11111111|11111111|1110011                7ffff3  [23]
    (231, 0x7ffff3),
    // (232)  |11111111|11111111|101010                 3fffea  [22]
    (232, 0x3fffea),
    // (233)  |11111111|11111111|101011                 3fffeb  [22]
    (233, 0x3fffeb),
    // (234)  |11111111|11111111|11110111|0            1ffffee  [25]
    (234, 0x1ffffee),
    // (235)  |11111111|11111111|11110111|1            1ffffef  [25]
    (235, 0x1ffffef),
    // (236)  |11111111|11111111|11110100               fffff4  [24]
    (236, 0xfffff4),
    // (237)  |11111111|11111111|11110101               fffff5  [24]
    (237, 0xfffff5),
    // (238)  |11111111|11111111|11111010|10           3ffffea  [26]
    (238, 0x3ffffea),
    // (239)  |11111111|11111111|1110100                7ffff4  [23]
    (239, 0x7ffff4),
    // (240)  |11111111|11111111|11111010|11           3ffffeb  [26]
    (240, 0x3ffffeb),
    // (241)  |11111111|11111111|11111100|110          7ffffe6  [27]
    (241, 0x7ffffe6),
    // (242)  |11111111|11111111|11111011|00           3ffffec  [26]
    (242, 0x3ffffec),
    // (243)  |11111111|11111111|11111011|01           3ffffed  [26]
    (243, 0x3ffffed),
    // (244)  |11111111|11111111|11111100|111          7ffffe7  [27]
    (244, 0x7ffffe7),
    // (245)  |11111111|11111111|11111101|000          7ffffe8  [27]
    (245, 0x7ffffe8),
    // (246)  |11111111|11111111|11111101|001          7ffffe9  [27]
    (246, 0x7ffffe9),
    // (247)  |11111111|11111111|11111101|010          7ffffea  [27]
    (247, 0x7ffffea),
    // (248)  |11111111|11111111|11111101|011          7ffffeb  [27]
    (248, 0x7ffffeb),
    // (249)  |11111111|11111111|11111111|1110         ffffffe  [28]
    (249, 0xffffffe),
    // (250)  |11111111|11111111|11111101|100          7ffffec  [27]
    (250, 0x7ffffec),
    // (251)  |11111111|11111111|11111101|101          7ffffed  [27]
    (251, 0x7ffffed),
    // (252)  |11111111|11111111|11111101|110          7ffffee  [27]
    (252, 0x7ffffee),
    // (253)  |11111111|11111111|11111101|111          7ffffef  [27]
    (253, 0x7ffffef),
    // (254)  |11111111|11111111|11111110|000          7fffff0  [27]
    (254, 0x7fffff0),
    // (255)  |11111111|11111111|11111011|10           3ffffee  [26]
    (255, 0x3ffffee),
    // (256)  |11111111|11111111|11111111|111111      3fffffff  [30]
    (256, 0x3fffffff),
];
